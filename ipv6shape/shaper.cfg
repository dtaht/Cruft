	# Traffic classes:
	# 1:20 Pentultimate Priority (ntp)
	# 1:25 Link Local Packets (1 hop)
        # 1:30 Interactive (SSH, DNS, Quake)
	# 1:35 Multicast packets (X hops)
	# 1:40 (ACK)
        # 1:50 Low latency (VoIP)
        # 1:60 Browsing (HTTP, HTTPs)
        # 1:70 Default
	# 1:80 Bulk Services (smtp, rsync)
	# 1:90 Unclassifiable
        # 1:95 Low priority (p2p, pop3, etc)


CLASSES="C_ULT C_LNK C_INT C_MCS C_ACK C_TLK C_BRW C_DEF C_BLK C_UNC C_P2P"
CLASSID=":20   :25   :30   :35   :40   :50   :60   :70   :80   :90   :95"

PRIOIP=
PRIOIPV6=

# IP addresses of the VoIP phones,
# if none, set VOIPIPS=""
VOIPIPS=""
VOIP6IPS=""
NTPIPS=

# X11?

# Interactive class: SSH Terminal, DNS and gaming (Quake)
INTERACTIVEPORTS="22,222,53,3389,5900"

# ichat? skype?
# VoIP telephony
VOIPPORTS="5060:5100,10000:11000,5000:5059,8000:8016,5004,1720,1731,4569"

# WWW, jabber and IRC
BROWSINGPORTS="80,443,8080"

# Rsync, SMTP
BULKPORTS="25,873" 
# The lowest priority traffic: eDonkey, Bittorrent, etc.
P2PPORTS="110,21,143,445,137:139,4662,4664,6881:6999"

########################################################################
# Configuration ends here
########################################################################

# Our problem is that we want to classify all packets
# And not worry about the interface table so much

# A - we could route the classes through these with a root

# 1 = eth0 
# 2 = eth1
# 3 = wlan0

# OR we could have name spaces
# for the chains, starting at the root
# Of these two options I prefer the first
# but it's totally unclear to me if we get head of line problems this way

setudpclassbyport() {
    port=$1
    CLASS=$2
    $iptables -t mangle -A SHAPER_U -p udp -m multiport --ports $port -g $CLASS
}

settcpclassbyport() {
    port=$1
    CLASS=$2
    $iptables -t mangle -A SHAPER_T -p tcp -m multiport --ports $port -g $CLASS
}

setclassbyport() {
    port=$1
    CLASS=$2
    $iptables -t mangle -A SHAPER_U -p udp -m multiport --ports $port -g $CLASS
    $iptables -t mangle -A SHAPER_T -p tcp -m multiport --ports $port -g $CLASS
}

function gen_chains() {
    for i in $CLASSES
    do
	$iptables -t mangle --new-chain $i
	$iptables -t mangle -A $i -j CLASSIFY --set-class 1$1
	shift 1
    done

    }
function check_device() {
	if [ -z "$DEV" ] ; then
		echo "$0: stop requires a device, aborting."
		exit -1
	fi
}
